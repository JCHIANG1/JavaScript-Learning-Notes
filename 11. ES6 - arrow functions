/ for functions we don't reuse, we don't need to name them because we do not reuse them anywhere else.
/ example#1
const myFunc = function() {
  const myVar = "value";
  return myVar;
};
/ can be rewritten as 
const myFunc = () => {
  const myVar = "value";
  return myVar;
};

/ example#2
const myFunc = function() {
  return "value";
};
/ can be rewritten as 
const myFunc = () => "value";

/ example#3
const doubler = function (iten) {
   return item * 2;
};
/ can be rewritten as 
const doubler = (item) => item * 2;
/ can be rewritten as 
const doubler = item => item * 2; /If an arrow function has a single parameter, the parentheses enclosing the parameter may be omitted.

/ more examples

function sum(a,b){
    return a+b
};
/ can be rewritten as 
let sum = (a,b) => a+b;
 
function isPositive(number){
    return number >=0
};
/ can be rewritten as 
let isPositive = number => number >=0;
 
function randomNumber(){
    return Math.random
};
/ can be rewritten as 
let randomNumber = () => Math.random;
 
document.addEventListener('click',function(){
    console.log('Click')
});
/ can be rewritten as 
document.addEventListener('click',() => console.log('Click'));

/ it can also have 2 arguments
const doubler = (item, multi) => item * multi;

/* set default parameter */
const test = (name = "default name") => "hello " + name;
console.log(test("Joe")) / "hello Joe"
console.log(test()) / "default name"


